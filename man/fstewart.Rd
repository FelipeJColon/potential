% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fstewart.R
\name{fstewart}
\alias{fstewart}
\title{Fast Stewart Potentials}
\usage{
fstewart(
  x,
  y,
  var = "v",
  fun = "e",
  span = 2000,
  beta = 2,
  limit = 3 * span,
  ncl = 3,
  size = 500
)
}
\arguments{
\item{x}{set of points to compute the potentials from, sf points.}

\item{y}{set of points for which the potentials are computed, sf points.}

\item{var}{names of the variables in \code{x} from which potentials are computed.
Quantitative variables with no negative values.}

\item{fun}{spatial interaction function. Options are "p"
(pareto, power law) or "e" (exponential).
For pareto the interaction is defined as: (1 + alpha * mDistance) ^ (-beta).
For "exponential" the interaction is defined as:
exp(- alpha * mDistance ^ beta).
The alpha parameter is computed from parameters given by the user
(\code{beta} and \code{span}).}

\item{span}{distance where the density of probability of the spatial
interaction function equals 0.5.}

\item{beta}{impedance factor for the spatial interaction function.}

\item{limit}{maximum distance used to retrieve \code{x} points, in map units.}

\item{ncl}{number of clusters. \code{ncl} is set to
\code{parallel::detectCores() - 1} by default.}

\item{size}{\code{fstewart} splits \code{y} in smaller chunks and
dispatches the computation in \code{ncl} cores, \code{size} indicates the
size of each chunks.}
}
\value{
If only one variable is computed a vector is returned, if more than
one variable is computed a matrix is returned.
}
\description{
Stewart potentials with a cutoff distance and parallel computation.
}
\examples{
\dontrun{
# The dataset is in cartography package
library(SpatialPosition)
require(cartography)
library(sf)

# known points
nuts3.spdf@data <- nuts3.df
kpts <- st_centroid(st_as_sf(nuts3.spdf), of_largest_polygon = TRUE)
# unknownpts
upts <- st_sf(geom = st_make_grid(x = st_as_sfc(st_bbox(kpts)), 
                                  cellsize = 20000, what = "centers"))
# compute potentials
pot <- fstewart(x = kpts, y = upts, var = "pop2008",
                fun = "e", span = 100000, beta = 3)

potsf <- cbind(upts, st_coordinates(upts), OUTPUT = pot)


isopot <- isopoly(x = potsf, xcoords = "X", ycoords = "Y", 
                  var = "OUTPUT", 
                  mask = st_buffer(st_as_sf(nuts0.spdf),1))

plot(isopot['center'])
}
}
